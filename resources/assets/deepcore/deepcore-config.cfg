cfg Items {
    cfg HandPump {
        MaxDrain = 4000 // Maximum drain from TE's in one click
    }
    cfg Canister {
        Capacity = 64000 // MB
        MaxPour = 4000 // Maximum pour into TE's in one click
    }
}

cfg Modules {
    cfg FuelTank {
        Capacity = 16000 // MB
    }
    cfg PowerCapacitor {
        Capacity = 500000 // MJ
    }
}

cfg Machines {
    cfg TurbineController {
        Enabled = Y

        MJPerTickPerTurbine = 10
        FuelConsumptionMultiplier = 0.9

        InternalPowerCapacity = 10000
        InternalFuelCapacity = 1000

        // MJ per MB, not counting FuelConsumptionMultiplier
        cfg FuelValues {
            fuel = 150
        }
        
        // Modules required for machine to be operational 
        cfg Required {
            Turbine = 1
        }

        // Modules that can be connected and a limit on their number
        // Do not add/remove modules unless you really know what you're doing
        // Changing the numbers should be OK
        cfg Modules {
            PowerOutput = 6
            Turbine = 50
            FluidInput = 5
            FuelTank = 10
            PowerCapacitor = 10
        }
    }
}

cfg Power {
  RF_MJ_Ratio = 10   // 10 RF = 1 MJ
  EU_MJ_Ratio = 2.5  // 5 EU = 2 MJ

  cfg EU {
    Enabled = Y
  }

  cfg BC {
    Enabled = Y

    // Defines the raio between Max and Min recieved power
    // Should be reasonably high to prevent small update spam
    MinReceivedEnergyDivisor = 10

    // Power loss from internal buffer, will loose on average PowerLoss/PowerLossInterval MJ/tick
    // Cannot be set below 0.01, this is enforced by BC API
    // Applies to the intermediate MJ buffer only
    PowerLoss = 1
    PowerLossInterval = 100
  }

  cfg RF {
    Enabled = Y
  }
}


// RECIPES

T = B:pistonBase
R = I:redstone
G = I:ingotGold
I = I:ingotIron
P = B:thinGlass
Q = I:netherquartz
S = OD:stickWood
B = deepcore:TurbineBlade
M = deepcore:PowerIO
F = deepcore:IronFrame
w = deepcore:IronWiring
W = deepcore:IronTubing
C = deepcore:Controller

PIP
IPI => deepcore:Canister
III

RIP
GPI => deepcore:HandPump
STR

_I_
I_I => deepcore:IronFrame * 2
_I_

_II
_II => deepcore:TurbineBlade * 4
__I

BBB
BIB => deepcore:TurbineRotor // 11 iron
BBB

I__
_S_ => deepcore:IronTubing * 16
__I

IR_
RSR => deepcore:IronWiring * 16
_RI

ITI
IRI => deepcore:PowerIO
ITI

IRI
RQR => deepcore:Controller
IRI

X = deepcore:TurbineRotor

FWF
wXw => deepcore:Turbine // 19 iron
FWF

I_I
FIF => deepcore:FluidInput
_W_

FPF
P_P => deepcore:FuelTank
FWF

FRF
RRR => deepcore:PowerCapacitor
FwF

FWF
wCw => deepcore:TurbineController
FWF

ifOreDict gearIron {
    A = OD:gearIron

    III
    FMF => deepcore:MJOutput
    AwA
}

ifMod IC2 {
    1 = ic2.core.Ic2Items[lvTransformer]
    2 = ic2.core.Ic2Items[mvTransformer]
    3 = ic2.core.Ic2Items[hvTransformer]

    _M_
    F1F => deepcore:EuOutputLV
    _w_

    _M_
    F2F => deepcore:EuOutputMV
    _w_

    _M_
    F3F => deepcore:EuOutputHV
    _w_
}